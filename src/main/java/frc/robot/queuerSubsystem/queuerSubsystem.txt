import com.revbotics.CANSparkMax;
import frc.robot.until.scheduling.LifecycleSubsystem;
import frc.robot.until.scheduling.SubsystemPriority;

public class QueuerSubsystem {
    private final CANSparkMax motor;
import
    //new QueuerSubsystem(motor)
    public QueuerSubsystem(CANSparkMax motor) {
    //Take motor from constructor from field
        this.motor = motor;
    }
    public class QueuerSubsystem extends LifecycleSubsystem {
        private final CANSparkMax motor;
        private boolean intaking = false;
        private boolean shooting = false; 
        public QueuerSubsystem(CANSparkMax motor) {
            super(SubsystemPriority.QUEUER);

            this.motor = motor;            
        }

        @Override
        public void robotPeriodic() {
            //If no intaking. set motor voltage to 0.3
            If(intaking = false) {
                motor.set(0.3);
            } else if(shooting = false) {
                motor.set(-0.5);
            } else {
                motor.set(0);
            }

            }
            // If no are shooting, set motor voltage to -0.5
            //If no are doing neither. set the motor volatege to p

            // fill this in your own
          // set motor to percentage
        }
    }
}

